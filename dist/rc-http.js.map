{"version":3,"sources":["rc-http.js","rc-http-controller.js","tpls-http.js"],"names":["angular","module","component","transclude","controller","controllerAs","bindings","templateUrl","auto","service","method","url","config","params","model","onStart","onSuccess","onError","$scope","$element","$attrs","$transclude","$templateRequest","$injector","$log","rcHttp","this","init","isPending","$onInit","isString","then","html","append","length","template","element","$compile","get","error","isUndefined","isObject","cache","extend","request","$service","data","copy","http_instance","success","$success","$error","e","message","run","$templateCache","put"],"mappings":"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","file":"rc-http.js","sourcesContent":["(function(angular){\n    'use strict';\n\n\n    // Load module\n    var module = angular.module('rcHttp');\n\n\n    module.component( 'rcHttp',\n        {\n            transclude: true,\n            controller: 'rcHttpCtrl',\n            controllerAs: '$rcHttp',\n            bindings: {\n                templateUrl: \"<?\",\n                auto:       \"@?\",\n                service:    \"@\",\n                method:     \"@\",\n                url:        \"@\",\n                config:     \"<\",\n                params:     \"<?\",\n                model:      \"=?\",\n                onStart:    \"&\",\n                onSuccess:  \"&\",\n                onError:    \"&\"\n        }\n    });\n\n})(angular);\n","(function(angular){\n  'use strict';\n\n  var module = angular.module('rcHttp');\n\n\n  module.controller('rcHttpCtrl', [\n      '$scope',\n      '$element',\n      '$attrs',\n      '$transclude',\n      '$templateRequest',\n      '$injector',\n      '$log',\n      function ( $scope, $element, $attrs, $transclude, $templateRequest, $injector, $log ) {\n\n      var rcHttp = this;\n\n      function init() {\n\n          rcHttp.isPending = false;\n      }\n\n      this.$onInit = function() {\n\n          $templateRequest(angular.isString(rcHttp.templateUrl) ? rcHttp.templateUrl : \"rc-http.tpl.html\").then(\n              function(html){\n\n                  //If no template url transclude with default empty template.\n                  if (!angular.isString(rcHttp.templateUrl)) {\n                      $element.append($transclude($scope, function () {}));\n                  }\n\n                  if (html.length) {\n                      var template = angular.element(html);\n                      $element.append(template);\n\n                      var $compile = $injector.get('$compile');\n                      $compile(template)($scope);\n                  }\n              },\n              function (error) {\n\n              }\n          );\n\n          rcHttp.auto = angular.isUndefined(rcHttp.auto) || rcHttp.auto === true ? true : false;\n          rcHttp.service = angular.isString(rcHttp.service) ? rcHttp.service : '$http';\n          rcHttp.method = angular.isString(rcHttp.method) ? rcHttp.method : 'get';\n          rcHttp.url = angular.isString(rcHttp.url) ? rcHttp.url : \"\";\n          rcHttp.config = angular.isObject(rcHttp.config) ? rcHttp.config : {cache: true};\n\n          if (rcHttp.params) {\n              angular.extend(rcHttp.config.params, rcHttp.params);\n          }\n\n          if (rcHttp.auto === true) {\n            rcHttp.request();\n          }\n      };\n\n\n      this.request = function(config) {\n\n          try {\n              var $service = $injector.get(rcHttp.service);\n\n              rcHttp.isPending = true;\n              rcHttp.onStart();\n\n              if (rcHttp.model) {\n                  rcHttp.config.data = rcHttp.model;\n              }\n\n              config = angular.isObject(config) ? config : angular.copy(rcHttp.config);\n              config.params = !config.params ? angular.copy(rcHttp.config.params) : config.params;\n              config.data = !config.data ? angular.copy(rcHttp.config.data) : config.data;\n\n              var http_instance = $service[rcHttp.method](rcHttp.url, config);\n\n              http_instance.then(function(success) {\n\n                  rcHttp.data = success.data ? success.data : success;\n\n                  rcHttp.onSuccess({ $success: rcHttp.data });\n                  rcHttp.isPending = false;\n              }, function(error) {\n\n                  rcHttp.onError({ $error: error });\n                  rcHttp.isPending = false;\n              });\n\n              return http_instance;\n          }\n          catch (e) {\n              $log.error(e);\n\n              rcHttp.onError({ $error: {message: 'Error send request rcHttp'} });\n              rcHttp.isPending = false;\n          }\n      };\n\n\n      init();\n\n  }]);\n\n})(angular);\n","angular.module('rcHttp').run(['$templateCache', function($templateCache) {$templateCache.put('rc-http.tpl.html','');}]);"],"sourceRoot":"dist"}